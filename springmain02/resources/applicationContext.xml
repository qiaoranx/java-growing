<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!--set注入提供数据库信息-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.passwd}"/>
        <property name="maxActive" value="20"/>
    </bean>
    <!--连接对象在容器中创建成功-->
    <!--声明sqlsessionfactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--set注入把连接池赋值给了dataSource属性-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 读取mybatis主配置文件-->
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>
    <!--dao对象,默认名称是接口名首字母小写-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!--指定dao接口所在的包名，MapperScannerConfigurer会通过getmapper方法创建每个接口的dao对象-->
        <property name="basePackage" value="org.example.dao"/>
    </bean>
<!--    声明service-->
    <bean id="studentService" class="org.example.service.impl.StudentServiceImpl">
        <property name="studentDao" ref="studentDao"/>
    </bean>
</beans>